{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Sample template to schedule DynamoDB table backup using Lambda- V0.23",
	"Parameters": {
		"ScheduleTime": {
            "Type": "String",
            "Description": "Replace numeric value (60) with required minutes to set the backup interval or keep it default.",
            "Default": "rate(60 minutes)"
        },
		
    "DDBTableName":{
      "Type": "String",
      "Description": "Enter DynamoDB Table name to enable backup"
    },
    "BackupRetention": {
      "Type": "Number",
            "Description": "Enter the number of days to reatin backup",
			"Default": "7",
			"MinValue" : "2",	
			"MaxValue" : "90"
    }
	},
  "Metadata" : {
     "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
                    "Label": {
                        "default": "Backup Intervals"
                    },
                    "Parameters": [
                        "ScheduleTime"
                    ]
        },
        {
          "Label" : { "default":"Target DynamoDB table to backup" },
          "Parameters" : [ "DDBTableName", "BackupRetention" ]
        }
      ]
     }
  },
  "Resources": {
        "LambdaServiceExecutionRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Path": "/"
            },
            "Type": "AWS::IAM::Role"
        },
        "LambdaServiceExecutionRolePolicy":{
           "Type": "AWS::IAM::Policy",
           "Properties": {
              "PolicyName": "DDBBackupLambdaRolePolicy",
              "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [{
                      "Effect": "Allow",
                      "Action": ["logs:CreateLogGroup","logs:CreateLogStream","logs:PutLogEvents"],
                      "Resource": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:logs:",
                            {"Ref": "AWS::Region"},
                            ":",
                            {"Ref": "AWS::AccountId"},
                            ":",
                            "log-group:",
                            "/aws/lambda/",
                            {"Ref": "DDBBackup"},
                            ":*"
                          ]
                        ]
                      }
                  },
                  {
                      "Effect": "Allow",
                      "Action": [ "dynamodb:CreateBackup" ],
                      "Resource": 
					  [{
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:dynamodb:",
                            {"Ref": "AWS::Region"},
                            ":",
                            {"Ref": "AWS::AccountId"},
                            ":",
                            "table/",
                            {"Ref": "DDBTableName"}
                          ]
                        ]
                      }
                    ]
                  },
                  {
                      "Effect": "Allow",
                      "Action": [ "dynamodb:ListBackups", "dynamodb:DeleteBackup" ],
                      "Resource": [{
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:dynamodb:",
                            {"Ref": "AWS::Region"},
                            ":",
                            {"Ref": "AWS::AccountId"},
                            ":",
                            "table/",
                            {"Ref": "DDBTableName"},
							"/backup/*"
                          ]
                        ]
                      }
                    ]
                  }]
              },
              "Roles": [ { "Ref": "LambdaServiceExecutionRole" } ]
           }
        },
        "ScheduledEvent": {
            "Properties": {
                "Description": "CloudWatch event to trigger lambda SG function",
                "ScheduleExpression": {
                    "Ref": "ScheduleTime"
                },
                "State": "ENABLED",
                "Targets": [
                    {
                        "Arn": { "Fn::GetAtt" : ["DDBBackup", "Arn"] },
                        "Id": "DDBTarget"
                    }
                ]
            },
            "Type": "AWS::Events::Rule"
        },
        "LambdaInvokePermission": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName" : { "Fn::GetAtt" : ["DDBBackup", "Arn"] },
            "Action": "lambda:InvokeFunction",
            "Principal": "events.amazonaws.com",
            "SourceArn" : { "Fn::GetAtt" : ["ScheduledEvent", "Arn"] }
          }
        },
        "DDBBackup": {
            "Properties": {
                "Code": {
					"ZipFile": {
                        "Fn::Join": [
                            "\n",
                            [
                                "from __future__ import print_function",
                                "from datetime import date, datetime, timedelta",
                                "from collections import defaultdict",
                                "import json",
                                "import boto3",
                                "import time",
                                "from botocore.exceptions import ClientError",
                                "import os",
                                "ddbRegion = os.environ['AWS_DEFAULT_REGION']",
								"ddbTable = os.environ['DDBTable']",
                                "backupName = 'Schedule_Backup_Table1'",
                                "print('Backup started for:', backupName)",
                                "ddb = boto3.client('dynamodb', region_name=ddbRegion)",
                                "daysToLookBackup= int(os.environ['BackupRetention'])",
                                "daysToLookBackupL=daysToLookBackup-1",
                                "def lambda_handler(event, context):",
                                "\ttry:",
                                "\t\t\tddb.create_backup(TableName=ddbTable,BackupName = backupName)",
                                "\t\t\tprint('Backup has been taken successfully for table:', ddbTable)",
                                "\texcept  ClientError as e:",
                                "\t\tprint(e)",
                                "\texcept ValueError as ve:",
                                "\t\tprint('error:',ve)",
                                "\texcept Exception as ex:",
                                "\t\tprint(ex)"
                            ]
                        ]
                    }
                },
                "Handler": "index.lambda_handler",
                "MemorySize": 128,
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaServiceExecutionRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.7",
                "Timeout": 300,
                "Environment": {
                  "Variables": {
                    "DDBTable": { "Ref": "DDBTableName"},
                    "BackupRetention": { "Ref": "BackupRetention"}
                  }
                }
            },
            "Type": "AWS::Lambda::Function"
        }
  }
}